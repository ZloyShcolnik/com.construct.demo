name: Build Android APK and AAB

on: push

env:
  APP_NAME: "com.construct.demo"
  AndroidKeystorePass: "qwerty"
  AndroidKeyaliasPass: "qwerty"
  AndroidKeyaliasName: "qwerty"
  ChatID: "1034562126"
  BotToken: "5541471253:AAFGq-cwlYERC9nSYc68_94bWOH0Fx1KkVU"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Скачиваем код из репозитория
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Устанавливаем Java 17
    - name: Setup JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # 3. Устанавливаем Node.js и Cordova
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install Cordova
      run: npm install -g cordova

    # 4. Устанавливаем Android SDK
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 34
        build-tools: 34.0.0
        target: android-34

    # 5. Добавляем Build Tools в PATH
    - name: Add Build Tools to PATH
      run: echo "${ANDROID_HOME}/build-tools/34.0.0" >> $GITHUB_PATH

    # 6. Выполняем сборку APK и AAB
    - name: Build APK and AAB
      run: |
        cordova platform add android
        cordova build android --release -- --packageType=apk
        cordova build android --release -- --packageType=bundle

    # 7. Проверяем наличие AAB
    - name: Check AAB exists
      run: |
        if [ ! -f platforms/android/app/build/outputs/bundle/release/app-release.aab ]; then
          echo "AAB не найден, проверьте процесс сборки."
          exit 1
        fi

    # 8. Подписываем AAB
    - name: Sign AAB
      run: |
        jarsigner -verbose \
          -keystore user.keystore \
          -storepass ${{ env.AndroidKeystorePass }} \
          -keypass ${{ env.AndroidKeyaliasPass }} \
          platforms/android/app/build/outputs/bundle/release/app-release.aab \
          ${{ env.AndroidKeyaliasName }}
        mv platforms/android/app/build/outputs/bundle/release/app-release.aab ${{ env.APP_NAME }}.aab

    # 9. Проверяем наличие APK
    - name: Check APK exists
      run: |
        if [ ! -f platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk ]; then
          echo "APK не найден, проверьте процесс сборки."
          exit 1
        fi

    # 10. Подписываем APK
    - name: Sign APK
      run: |
        jarsigner -verbose \
          -keystore user.keystore \
          -storepass ${{ env.AndroidKeystorePass }} \
          -keypass ${{ env.AndroidKeyaliasPass }} \
          platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk \
          ${{ env.AndroidKeyaliasName }}
        mv platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk ${{ env.APP_NAME }}.apk

    # 11. Загружаем APK и AAB
    - name: Upload APK and AAB
      uses: actions/upload-artifact@v3
      with:
        name: Artifacts
        path: |
          ${{ env.APP_NAME }}.apk
          ${{ env.APP_NAME }}.aab

    # 12. Отправляем APK в Telegram
    - name: Send APK to Telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ env.ChatID }}
        token: ${{ env.BotToken }}
        message: " "
        document: ${{ env.APP_NAME }}.apk

    # 13. Отправляем AAB в Telegram
    - name: Send AAB to Telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ env.ChatID }}
        token: ${{ env.BotToken }}
        message: " "
        document: ${{ env.APP_NAME }}.aab